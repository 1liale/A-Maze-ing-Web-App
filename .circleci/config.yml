version: 2.1

orbs:
  heroku: circleci/heroku@2.0
  go: circleci/go@1.7.3

executors:
  go-executor:
    docker:
      - image: cimg/go:1.21 # Use the Go Docker image that fits your Go version
  node-executor:
    docker:
      - image: cimg/node:20.16.0

jobs:
  build_test_frontend:
    working_directory: ~/project/frontend
    executor: node-executor
    steps:
      - checkout:
          path: ~/project
      - run:
          name: List Directory
          command: ls
      - run:
          name: Install Dependencies
          command: yarn install
      - run:
          name: Build Frontend Project Artifacts
          command: yarn build
      - run:
          name: Run Frontend Acceptance Tests
          command: yarn test

  deploy_frontend_preview:
    docker:
      - image: cimg/node:20.16.0
    environment:
      VERCEL_ORG_ID: HOhfPwXWxqCxCPw8lI4vkFX8
      VERCEL_PROJECT_ID: prj_VX1yDKYkqQLnM2s4wQHswKzjA7ki
    steps:
      - checkout
      - run:
          name: Install Vercel CLI
          command: sudo npm install --global vercel@latest
      - run:
          name: Pull Vercel Environment Information
          command: vercel pull --yes --environment=preview --token=$VERCEL_TOKEN
      - run:
          name: Build Project Artifacts
          command: vercel build --token=$VERCEL_TOKEN
      - run:
          name: Deploy Project Artifacts to Vercel
          command: vercel deploy --prebuilt --token=$VERCEL_TOKEN

  deploy_frontend_prod:
    docker:
      - image: cimg/node:20.16.0
    environment:
      VERCEL_ORG_ID: HOhfPwXWxqCxCPw8lI4vkFX8
      VERCEL_PROJECT_ID: prj_VX1yDKYkqQLnM2s4wQHswKzjA7ki
    steps:
      - checkout
      - run:
          name: Install Vercel CLI
          command: sudo npm install --global vercel@latest
      - run:
          name: Pull Vercel Environment Information
          command: vercel pull --yes --environment=production --token=$VERCEL_TOKEN
      - run:
          name: Build Project Artifacts
          command: vercel build --prod --token=$VERCEL_TOKEN
      - run:
          name: Deploy Project Artifacts to Vercel
          command: vercel deploy --prebuilt --prod --token=$VERCEL_TOKEN

  build_test_backend:
    working_directory: ~/project/backend
    executor:
      name: go/default # Use the default executor from the orb
      tag: '1.21' # Specify a version tag
    steps:
      - checkout:
          path: ~/project
      - go/load-cache # Load cached Go modules.
      - go/mod-download # Run 'go mod download'.
      - go/save-cache # Save Go modules to cache.
      - run:
          name: Build Go Program
          command: go build
      - go/test: # Runs 'go test ./...' but includes extensive parameterization for finer tuning.
          covermode: atomic
          failfast: true
          race: true

  deploy_backend_prod:
    executor: heroku/default
    steps:
      - checkout
      - heroku/install
      - run:
          name: Authenticate with Heroku
          command: echo "$HEROKU_API_KEY" | heroku auth:token
      - run:
          name: Add Heroku Remote
          command: git remote add heroku https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME.git
      - run:
          name: Push to Heroku
          command: git subtree push --prefix backend heroku master

workflows:
  version: 2
  build-test-deploy:
    jobs:
      - build_test_frontend
      - deploy_frontend_preview:
          requires:
            - build_test_frontend
          filters:
            branches:
              ignore: /production/
      - deploy_frontend_prod:
          requires:
            - build_test_frontend
          filters:
            branches:
              only: /production/
      
      - build_test_backend
      - deploy_backend_prod:
          requires:
            - build_test_backend
          # filters:
          #   branches:
          #     only: /production/